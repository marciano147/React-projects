{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","mon","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","arr","this","filteredmonst","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GAAD,OACjB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACpB,+BAAKL,EAAMI,SAASE,KAApB,OACA,4BAAIN,EAAMI,SAASG,YCHXC,EAAW,SAAAR,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SACCD,EAAMI,SAASK,KAAI,SAAAC,GAAG,OACxB,cAAC,EAAD,CAAmBN,SAAUM,GAAlBA,EAAIL,UCJFM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCqCjEG,E,kDAlCb,aAAc,IAAD,8BACX,gBAWFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXrC,EAAKC,MAAO,CACVlB,SAAU,GACVe,YAAa,IAJJ,E,qDAOb,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKT,SAAS,CAACd,SAAWuB,S,oBAKzC,WAAS,IAAD,EAC4BC,KAAKN,MAA/BlB,EADF,EACEA,SAAUe,EADZ,EACYA,YACZU,EAAgBzB,EAAS0B,QAAO,SAAApB,GAAG,OAAIA,EAAIJ,KAAKyB,cAAcC,SAASb,EAAYc,wBAEzF,OAEI,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUT,SAAUyB,W,GAzBVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed61eaa2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) => (\r\n   <div className='card-container'>\r\n   <img alt=\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set7&size=180x180`}/>\r\n     <h2>{props.monsters.name} </h2>\r\n     <p>{props.monsters.email}</p>\r\n   </div> \r\n);\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n <div className='card-list'> \r\n{ props.monsters.map(mon =>(\r\n<Card key={mon.id} monsters={mon}/>\r\n))}\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n);\r\n// e => this.setState({searchField: e.target.value})","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state= {\n      monsters: [], \n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(arr => this.setState({monsters : arr}))\n  }\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredmonst = monsters.filter(mon => mon.name.toLowerCase().includes(searchField.toLocaleLowerCase()\n    ));\n    return(\n\n        <div className=\"App\">\n        <h1>Monster Rolodox </h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n        <CardList monsters={filteredmonst}>\n        </CardList>\n     \n         \n        </div>\n      );\n    }\n   }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}